

NestedWordAutomaton palindromeChecker = (
	callAlphabet = { a b },
	internalAlphabet = { c d },
	returnAlphabet = { e f },
	states = {f0A f0B f0C f1A f1B f1C s0 s1 t00 t01 t10 t11},
	initialStates = {f0A f0B f0C},
	finalStates = {s0 t11},
	callTransitions = {
		(f0A a f0A)
		(f0A a f0B)
		(f0A a f0C)
		(f0A a s0)
		(f0B b f0A)
		(f0B b f0B)
		(f0B b f0C)
		(f0B b s0)
		(f0C a f1A)
		(f0C a f1B)
		(f0C a f1C)
		(f0C a s1)
		(f1A b f0A)
		(f1A b f0B)
		(f1A a f1C)
		(f1A b s0)
		(f1B a f1A)
		(f1B a f1B)
		(f1B b f0C)
		(f1B a s1)
		(f1C b f1A)
		(f1C b f1B)
		(f1C b f1C)
		(f1C b s1)
	},
	internalTransitions = {
		(f0A c s0)
		(f0A c s1)
		(f0A d s0)
		(f1A c s0)
		(f1A c s1)
		(f1A d s0)
		(f0B c s0)
		(f0B c s1)
		(f0B d s0)
		(f1B c s1)
		(f1B d s1)
		(f1B d s0)
		(f0C c s1)
		(f0C d s1)
		(f0C d s0)
		(f1C c s1)
		(f1C d s1)
		(f1C d s0)
		(f0A c t00)
		(f0A d t01)
		(f0B c t00)
		(f0B d t01)
		(f0C c t00)
		(f0C d t01)
		(f1A c t10)
		(f1A d t11)
		(f1B c t10)
		(f1B d t11)
		(f1C c t10)
		(f1C d t11)
	}, 
	returnTransitions = {
		(f0A f0A e t00)
		(f0A f0B e t00)
		(f0A f0C e t00)
		(f0A f1A e t00)
		(f0A f1B e t00)
		(f0A f1C e t00)
		(f0B f0A e t00)
		(f0B f0B e t00)
		(f0B f0C e t00)
		(f0B f1A e t00)
		(f0B f1B e t00)
		(f0B f1C e t00)
		(f0C f0A e t00)
		(f0C f0B e t00)
		(f0C f0C e t00)
		(f0C f1A e t00)
		(f0C f1B e t00)
		(f0C f1C e t00)
		(f1A f0A e t00)
		(f1A f0B e t10)
		(f1A f0C e t10)
		(f1A f1A e t10)
		(f1A f1B e t10)
		(f1A f1C e t10)
		(f1B f0A e t10)
		(f1B f0B e t10)
		(f1B f0C e t10)
		(f1B f1A e t10)
		(f1B f1B e t10)
		(f1B f1C e t10)
		(f1C f0A e t10)
		(f1C f0B e t10)
		(f1C f0C e t10)
		(f1C f1A e t10)
		(f1C f1B e t10)
		(f1C f1C e t10)
		(f0A f0A f t01)
		(f0A f0B f t01)
		(f0A f0C f t01)
		(f0A f1A f t01)
		(f0A f1B f t01)
		(f0A f1C f t01)
		(f0B f0A f t01)
		(f0B f0B f t01)
		(f0B f0C f t01)
		(f0B f1A f t01)
		(f0B f1B f t01)
		(f0B f1C f t01)
		(f0C f0A f t01)
		(f0C f0B f t01)
		(f0C f0C f t01)
		(f0C f1A f t01)
		(f0C f1B f t01)
		(f0C f1C f t01)
		(f1A f0A f t01)
		(f1A f0B f t11)
		(f1A f0C f t11)
		(f1A f1A f t11)
		(f1A f1B f t11)
		(f1A f1C f t11)
		(f1B f0A f t11)
		(f1B f0B f t11)
		(f1B f0C f t11)
		(f1B f1A f t11)
		(f1B f1B f t11)
		(f1B f1C f t11)
		(f1C f0A f t11)
		(f1C f0B f t11)
		(f1C f0C f t11)
		(f1C f1A f t11)
		(f1C f1B f t11)
		(f1C f1C f t11)
		(s0 f0A e s0)
		(s0 f1A e s0)
		(s0 f0B f s0)
		(s0 f1B f s0)
		(s0 f0C e s1)
		(s0 f1C e s1)
		(s1 f0A f s0)
		(s1 f1A f s0)
		(s1 f0B e s1)
		(s1 f1B e s1)
		(s1 f0C f s1)
		(s1 f1C f s1)
		(t00 f0A e t00)
		(t00 f0A f t01)
		(t00 f1A e t00)
		(t00 f1A f t01)
		(t00 f0C e t10)
		(t00 f0C f t11)
		(t00 f1C e t10)
		(t00 f1C f t11)
		(t01 f0B e t00)
		(t01 f0B f t01)
		(t01 f1B e t00)
		(t01 f1B f t01)
		(t10 f0B e t10)
		(t10 f0B f t11)
		(t10 f1B e t10)
		(t10 f1B f t11)
		(t11 f0A e t00)
		(t11 f0A f t01)
		(t11 f1A e t00)
		(t11 f1A f t01)
		(t11 f0C e t10)
		(t11 f0C f t11)
		(t11 f1C e t10)
		(t11 f1C f t11)
	}
);

NestedWordAutomaton detPalCheck = determinize(palindromeChecker);
print(numberOfStates(palindromeChecker));
print(numberOfStates(detPalCheck));

